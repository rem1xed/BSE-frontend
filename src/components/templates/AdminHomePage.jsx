import React, { useEffect, useRef, useState } from 'react';
import Chart from 'chart.js/auto';
import styles from '../../styles/AdminHomePage.module.css';

const AdminHomePage = () => {
    const chartRef = useRef(null);
    const chartInstance = useRef(null);
    const [activeTab, setActiveTab] = useState('home');
    const [visiblePanel, setVisiblePanel] = useState(null);

    // –î–∞–Ω—ñ (–º–æ–∂–Ω–∞ –ø—ñ–∑–Ω—ñ—à–µ –≤–∏—Ç—è–≥—É–≤–∞—Ç–∏ –∑ API)
    const stats = {
        totalComplaints: 154,
        resolvedComplaints: 92,
        todayComplaints: 7,
        activeAds: 1247,
        blockedAds: 143,
        totalUsers: 4582,
        blockedUsers: 37,
    };

    const weeklyComplaintsData = [4, 6, 3, 7, 5, 8, 2];
    const weeklyLabels = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–ù–¥'];

    const statsTabData = {
        allComplaints: 102,
        resolved: 87,
        activeUsers: 5412,
        adsToday: 120,
    };

    useEffect(() => {
        if (activeTab === 'home' && chartRef.current) {
            if (chartInstance.current) chartInstance.current.destroy();

            const ctx = chartRef.current.getContext('2d');
            chartInstance.current = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: weeklyLabels,
                    datasets: [
                        {
                            label: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–∫–∞—Ä–≥',
                            data: weeklyComplaintsData,
                            borderColor: '#007bff',
                            backgroundColor: 'rgba(0,123,255,0.1)',
                            tension: 0.4,
                        },
                    ],
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: { display: false },
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: { stepSize: 2 },
                        },
                    },
                },
            });
        }

        return () => {
            if (chartInstance.current) chartInstance.current.destroy();
        };
    }, [activeTab]);

    const togglePanel = (id) => {
        setVisiblePanel((prev) => (prev === id ? null : id));
    };

    const renderTabButton = (label, tabId, icon) => (
        <button
            className={`${styles.tab_btn} ${activeTab === tabId ? styles.active : ''}`}
            onClick={() => setActiveTab(tabId)}
        >
            {icon} {label}
        </button>
    );

    return (
        <div className={styles.wrapper}>
            <div className={styles.sidebar}>
                <h2>–ê–¥–º—ñ–Ω</h2>
                {renderTabButton('–ì–æ–ª–æ–≤–Ω–∞', 'home', 'üè†')}
                {renderTabButton('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ', 'users', 'üë§')}
                {renderTabButton('–û–≥–æ–ª–æ—à–µ–Ω–Ω—è', 'ads', 'üì¶')}
                {renderTabButton('–°–∫–∞—Ä–≥–∏', 'complaints', 'üö®')}
            </div>

            <div className={styles.main_conteiner}>
                {/* –ì–æ–ª–æ–≤–Ω–∞ */}
                {activeTab === 'home' && (
                    <section className={styles.active}>
                        <header className={styles.header}>
                            <h1>–ê–¥–º—ñ–Ω-–ü–∞–Ω–µ–ª—å BSE ‚Äî –ì–æ–ª–æ–≤–Ω–∞</h1>
                        </header>
                        <div className={styles.container}>
                            <div className={styles.stats_grid}>
                                {[
                                    ['–°–∫–∞—Ä–≥ –∑–∞–≥–∞–ª–æ–º', stats.totalComplaints],
                                    ['–°–∫–∞—Ä–≥ –≤–∏—Ä—ñ—à–µ–Ω–æ', stats.resolvedComplaints],
                                    ['–°–∫–∞—Ä–≥ –∑–∞ —Å—å–æ–≥–æ–¥–Ω—ñ', stats.todayComplaints],
                                    ['–ê–∫—Ç–∏–≤–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è', stats.activeAds],
                                    ['–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è', stats.blockedAds],
                                    ['–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –≤—Å—å–æ–≥–æ', stats.totalUsers],
                                    ['–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤', stats.blockedUsers],
                                ].map(([label, value]) => (
                                    <div className={styles.stat_card} key={label}>
                                        <h3>{label}</h3>
                                        <p>{value}</p>
                                    </div>
                                ))}
                            </div>
                            <div className={styles.chart_block}>
                                <h2>–î–∏–Ω–∞–º—ñ–∫–∞ —Å–∫–∞—Ä–≥ –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ–π —Ç–∏–∂–¥–µ–Ω—å</h2>
                                <canvas ref={chartRef}></canvas>
                            </div>
                        </div>
                    </section>
                )}
                {/* –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ */}
                {activeTab === 'users' && (
                    <section className={styles.section}>
                        <header className={styles.header}>
                            <h1>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</h1>
                        </header>
                        <table className={styles.table}>
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>–õ–æ–≥—ñ–Ω</th>
                                    <th>Email</th>
                                    <th>–°—Ç–∞—Ç—É—Å</th>
                                    <th>–î–∞—Ç–∞</th>
                                    <th>–î—ñ—ó</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>101</td>
                                    <td>andrii_k</td>
                                    <td>andrii@email.com</td>
                                    <td>–ê–∫—Ç–∏–≤–Ω–∏–π</td>
                                    <td>2023-12-01</td>
                                    <td><button className={styles.btn}>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏</button></td>
                                </tr>
                            </tbody>
                        </table>
                    </section>
                )}

                {/* –û–≥–æ–ª–æ—à–µ–Ω–Ω—è */}
                {activeTab === 'ads' && (
                    <section className={styles.section}>
                        <header className={styles.header}>
                            <h1>–û–≥–æ–ª–æ—à–µ–Ω–Ω—è</h1>
                        </header>
                        <table className={styles.table}>
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>–ù–∞–∑–≤–∞</th>
                                    <th>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á</th>
                                    <th>–°—Ç–∞—Ç—É—Å</th>
                                    <th>–î–∞—Ç–∞</th>
                                    <th>–î—ñ—ó</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>2001</td>
                                    <td>–ü—Ä–æ–¥–∞–º –≤–µ–ª–æ—Å–∏–ø–µ–¥</td>
                                    <td>andrii_k</td>
                                    <td>–ê–∫—Ç–∏–≤–Ω–µ</td>
                                    <td>2024-11-02</td>
                                    <td>
                                        <button className={styles.btn} onClick={() => togglePanel('adView')}>
                                            –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        {visiblePanel === 'adView' && (
                            <div className={styles.panel_view}>
                                <h3>–û–≥–æ–ª–æ—à–µ–Ω–Ω—è</h3>
                                <p><strong>ID:</strong> 2001</p>
                                <p><strong>–ù–∞–∑–≤–∞:</strong> –ü—Ä–æ–¥–∞–º –≤–µ–ª–æ—Å–∏–ø–µ–¥</p>
                                <p><strong>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:</strong> andrii_k</p>
                                <div className={styles.actions}>
                                    <button className={styles.btn}>–°—Ö–≤–∞–ª–∏—Ç–∏</button>
                                    <button className={styles.btn}>–ó–∞–±–ª–æ–∫—É–≤–∞—Ç–∏</button>
                                    <button className={styles.btn} onClick={() => togglePanel(null)}>–ù–∞–∑–∞–¥</button>
                                </div>
                            </div>
                        )}
                    </section>
                )}

                {/* –°–∫–∞—Ä–≥–∏ */}
                {activeTab === 'complaints' && (
                    <section className={styles.section}>
                        <header className={styles.header}>
                            <h1>–°–∫–∞—Ä–≥–∏</h1>
                        </header>
                        <table className={styles.table}>
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>–í—ñ–¥ –∫–æ–≥–æ</th>
                                    <th>–ù–∞ –∫–æ–≥–æ</th>
                                    <th>–ü—Ä–∏—á–∏–Ω–∞</th>
                                    <th>–°—Ç–∞—Ç—É—Å</th>
                                    <th>–î—ñ—ó</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>501</td>
                                    <td>id:101<br />andrii_k</td>
                                    <td>id:102<br />marina12</td>
                                    <td>–®–∞—Ö—Ä–∞–π—Å—Ç–≤–æ</td>
                                    <td><span className={`${styles.badge} ${styles.pending}`}>–û—á—ñ–∫—É—î</span></td>
                                    <td>
                                        <button className={styles.btn} onClick={() => togglePanel('compView')}>
                                            –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>

                        {visiblePanel === 'compView' && (
                            <div className={styles.panel_view}>
                                <h3>–°–∫–∞—Ä–≥–∞</h3>
                                <p><strong>ID:</strong> 501</p>
                                <p><strong>–í—ñ–¥:</strong> andrii_k (id:101)</p>
                                <p><strong>–ù–∞:</strong> marina12 (id:102)</p>
                                <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> –®–∞—Ö—Ä–∞–π—Å—Ç–≤–æ</p>
                                <p><strong>–û–ø–∏—Å:</strong> –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –Ω–∞–¥—ñ—Å–ª–∞–≤ —Ç–æ–≤–∞—Ä –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏.</p>
                                <div className={styles.actions}>
                                    <button className={styles.btn}>–ü–æ–∑–Ω–∞—á–∏—Ç–∏ —è–∫ –≤–∏–∫–æ–Ω–∞–Ω–µ</button>
                                    <button className={styles.btn}>–ê—Ä—Ö—ñ–≤—É–≤–∞—Ç–∏</button>
                                    <button className={styles.btn} onClick={() => togglePanel(null)}>–ù–∞–∑–∞–¥</button>
                                </div>
                            </div>
                        )}
                    </section>
                )}
            </div>
        </div>
    );
};

export default AdminHomePage;
